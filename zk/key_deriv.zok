import "./ecc/compressPoints";
import "./utils/casts/keccak_to_field";

from "ecc/babyjubjubParams" import BABYJUBJUB_PARAMS;
import "ecc/edwardsAdd";
import "hashes/keccak/256bit" as keccak256;

// const u32 PARTICIPANTS = (To be filled in by the build script)
const u32 N = PARTICIPANTS;
const u32 N_TIMES_32 = N * 32;

def main(private field[N][2] firstCoefficients, field hash) -> field[2] {
    assert(hash == keccak_to_field(keccak256(compressPoints::<_,N_TIMES_32>(firstCoefficients))));

    field[2] mut key  = BABYJUBJUB_PARAMS.INFINITY;
    for u32 i in 0..N {
        key = edwardsAdd(key, firstCoefficients[i], BABYJUBJUB_PARAMS);
    }

    return key;
}
